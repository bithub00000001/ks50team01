<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.ks50team01.chimney.chart.mapper.ChartMapper">

    <resultMap id="MeasurementResultMap" type="ksmart.ks50team01.chimney.cleansys.dto.MeasurementResultDTO">
        <result property="areaNm"                column="area_nm"/>
        <result property="factManageNm"          column="fact_manage_nm"/>
        <result property="stackCode"             column="stack_code"/>
        <result property="mesureDt"              column="mesure_dt"/>
        <result property="tspExhstPermStdrValue" column="tsp_exhst_perm_stdr_value"/>
        <result property="tspMesureValue"        column="tsp_mesure_value"/>
        <result property="soxExhstPermStdrValue" column="sox_exhst_perm_stdr_value"/>
        <result property="soxMesureValue"        column="sox_mesure_value"/>
        <result property="noxExhstPermStdrValue" column="nox_exhst_perm_stdr_value"/>
        <result property="noxMesureValue"        column="nox_mesure_value"/>
        <result property="hclExhstPermStdrValue" column="hcl_exhst_perm_stdr_value"/>
        <result property="hclMesureValue"        column="hcl_mesure_value"/>
        <result property="hfExhstPermStdrValue"  column="hf_exhst_perm_stdr_value"/>
        <result property="hfMesureValue"         column="hf_mesure_value"/>
        <result property="nh3ExhstPermStdrValue" column="nh3_exhst_perm_stdr_value"/>
        <result property="nh3MesureValue"        column="nh3_mesure_value"/>
        <result property="coExhstPermStdrValue"  column="co_exhst_perm_stdr_value"/>
        <result property="coMesureValue"         column="co_mesure_value"/>
    </resultMap>

    <select id="getMeasurementsByBusinessAndStack" parameterType="map" resultMap="MeasurementResultMap">
        <!-- 특정 사업장과 배출구의 측정 데이터를 가져오는 쿼리 -->
        SELECT
            area_nm,
            fact_manage_nm,
            stack_code,
            mesure_dt,
            tsp_exhst_perm_stdr_value,
            tsp_mesure_value,
            sox_exhst_perm_stdr_value,
            sox_mesure_value,
            nox_exhst_perm_stdr_value,
            nox_mesure_value,
            hcl_exhst_perm_stdr_value,
            hcl_mesure_value,
            hf_exhst_perm_stdr_value,
            hf_mesure_value,
            nh3_exhst_perm_stdr_value,
            nh3_mesure_value,
            co_exhst_perm_stdr_value,
            co_mesure_value
        FROM measurement_results
        WHERE
            fact_manage_nm = #{business}
        AND
            stack_code = #{stackCode}
        ORDER BY mesure_dt ASC
    </select>


    <select id="getRegions" resultType="string">
        <!-- 데이터베이스에서 지역 목록을 가져오는 쿼리 -->
        SELECT DISTINCT
            area_nm
        FROM
            measurement_results
    </select>

    <select id="getBusinessesByRegion" parameterType="string" resultType="string">
        <!-- 특정 지역에 해당하는 사업장 목록을 가져오는 쿼리 -->
        SELECT DISTINCT
            fact_manage_nm
        FROM
            measurement_results
        WHERE
            area_nm = #{region}
    </select>

    <select id="getStacksByBusiness" parameterType="string" resultType="string">
        <!-- 특정 사업장의 배출구 목록을 가져오는 쿼리 -->
        SELECT DISTINCT
            stack_code
        FROM
            measurement_results
        WHERE
            fact_manage_nm = #{business}
    </select>

</mapper>
