<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ksmart.ks50team01.platform.destination.mapper.DestinationMapper">
	
	<select id="addTourGoodsCheckList" parameterType="String" resultType="boolean">
		/* 중복 관광지 세부사항 체크 */
			SELECT
				COUNT(TOUR_GOODS)
			FROM
			
			WHERE
				TOUR_GOODSOPTION = #{tourGoodsOptionCd};
		
	</select>
	
	<select id="addTourCheckList" parameterType="String" resultType="boolean">
		/* 중복 관광지 체크 */
			SELECT
				COUNT(TOUR_NAME)
			FROM
				TOUR_GOODS as tg
				INNER JOIN 
				TOUR_GOODSOPTION as tgo
				ON
				tg.TOUR_GDS_CD = tgo.TOUR_GDS_CD
				INNER JOIN
				TOUR_INFO as ti
				ON
				tg.TOUR_INFO_CD = ti.TOUR_INFO_CD
			WHERE
				TOUR_NAME = #{TOUR_NAME};		
	
	
	
	</select>
	
	<insert id="addTour" parameterType="destination">
		/* 관광지 등록 처리 */
		INSERT INTO
			TOUR_INFO
			(TOUR_NAME,
			 TOUR_INFO_CD,
			 TRIP_SCTGRY_CD,
			 PRTNR_BPLC_CD,
			 RGN_SCTGRY_NM,
			 REG_PF_BIZ_ID,
			 TOUR_ADDR, 		
			 TOUR_DADDR, 		
			 TOUR_SITE, 		
			 TOUR_CONTATC1,
			 TOUR_CONTATC2,
			 TOUR_OTHERS,
			 REG_YMD)
		VALUES
			(#{tourName},
			 #{tourInfoCode},
			 #{tripSCateCode},
			 #{partnerBPlaceCode},
			 #{regionSCateName},
			 #{tourAuthorityId},
			 #{tourAddr},
		 	 #{tourDaddr},
		 	 #{tourSite},
			 #{tourContactNum},
		 	 #{tourContactNum2},
			#{tourOthers}, 	 
			NOW());
	
	</insert>
	

	<insert id="addTourGoods" parameterType="destination">
		/* 관광지 세부 등록 */
			INSERT INTO 
				TOUR_GOODS
				(TOUR_GDS_CD, 
				PRTNR_BPLC_CD,
				 REG_PF_BIZ_ID, 
				 TOUR_INFO_CD,
				 RGN_SCTGRY_NM, 
				 TOUR_GDS_CTGRY,
				 ACT_YN,
				 REG_YMD)
				VALUES 
				(
				 #{tourGoodsCode},
				 #{partnerBPlaceCode},
				 #{tourAuthorityId},
				 #{tourInfoCode},
				 #{regionSCateName},
				 #{tourGoodsCate},
				 'Y',
				 now()
				 );
	</insert>
	
	<insert id="addTourGoodsOp">
		/* 관광지 세부사항 옵션 등록 */
			INSERT INTO TOUR_GOODSOPTION
			(TOUR_GDSOPT_CD,
			 REG_PF_BIZ_ID, 
			 TOUR_GDS_CD,
			 PRTNR_BPLC_CD,
			 RGN_SCTGRY_NM, 
			 TOUR_GDSOPT_LIST,
			 TOUR_GDSOPT_PRC,
			 TOUR_GDSOPT_TIME, 
			 TOUR_GDSOPT_RMRK, 
			 REG_YMD)
			VALUES 
			(#{tourGoodsOptionCd},
			 #{tourAuthorityId},
			 #{tourGoodsCode},
			 #{partnerBPlaceCode},
			 #{regionSCateName}, 
			 #{tourGoodsList},
			 #{tourGoodsOptPrice},
			 #{tourGoodsTime}, 
			 #{tourOptionRemarks}, 
			 NOW());
	</insert>
	
	<select id="searchTourName" resultType="destination">
		/* 관광지 이름 검색 */
		SELECT 
			TOUR_NAME as tourName,
			TOUR_INFO_CD as tourInfoCode
		FROM 
			TOUR_INFO
		WHERE 
			TOUR_NAME LIKE CONCAT('%', #{tourName}, '%')
			
	</select>
	
	
	<delete id="removeTourGoods" parameterType="String">
		/* 관광지 상세목록 삭제 */
			DELETE
			FROM
				TOUR_GOODSOPTION
			WHERE
				TOUR_GDSOPT_CD = #{tourGoodsOptionCd};
	</delete>
	
	<delete id="removeTour" parameterType="String">
		/* 관광지 삭제 */
			DELETE
			FROM
				TOUR_INFO
			WHERE
				TOUR_INFO_CD = #{tourInfoCode};
		
	</delete>
	
	<select id="getTourInfoList" resultType="destination">

		/* 관광지 정보 조회 */

			SELECT
				TOUR_INFO_CD 	AS 	tourInfoCode,
				REG_PF_BIZ_ID 	AS 	tourAuthorityId,
				TOUR_NAME 		AS 	tourName,
				TOUR_ADDR 		AS 	tourAddr,
				TOUR_DADDR 		AS 	tourDaddr,
				TOUR_SITE 		AS	tourSite,
				TOUR_CONTATC1 	AS	tourContactNum,
				TOUR_CONTATC2 	AS 	tourContactNum2,
				TOUR_OTHERS 	AS 	tourOthers,
				REG_YMD 		AS 	tourRegDate,
				MDFCN_YMD 		AS 	tourFormDate
			FROM
				TOUR_INFO;

	</select>
	
	<select id="getTourInfoListByName" resultType="destination">

		/* 관광지 이름 검색 정보 조회 */

			SELECT
				TOUR_INFO_CD 	AS 	tourInfoCode,
				REG_PF_BIZ_ID 	AS 	tourAuthorityId,
				TOUR_NAME 		AS 	tourName,
				TOUR_ADDR 		AS 	tourAddr,
				TOUR_DADDR 		AS 	tourDaddr,
				TOUR_SITE 		AS	tourSite,
				TOUR_CONTATC1 	AS	tourContactNum,
				TOUR_CONTATC2 	AS 	tourContactNum2,
				TOUR_OTHERS 	AS 	tourOthers,
				REG_YMD 		AS 	tourRegDate,
				MDFCN_YMD 		AS 	tourFormDate
			FROM
				TOUR_INFO
			<where>
				<if test="tourName != null and tourName != ''">
					TOUR_NAME LIKE CONCAT('%', #{tourName}, '%');
				</if>
			</where>

	</select>
	

	<select id="getTourInfoByName" resultType="destination">
		/* 관광지 수정 전 처리 */
			SELECT
				TRIP_SCTGRY_CD  AS  tripSCateCode,
				PRTNR_BPLC_CD	AS	partnerBPlaceCode,
				RGN_SCTGRY_NM	AS	regionSCateName,
				TOUR_INFO_CD 	AS 	tourInfoCode,
				REG_PF_BIZ_ID 	AS 	tourAuthorityId,
				TOUR_NAME 		AS 	tourName,
				TOUR_ADDR 		AS 	tourAddr,
				TOUR_DADDR 		AS 	tourDaddr,
				TOUR_SITE 		AS 	tourSite,
				TOUR_CONTATC1 	AS 	tourContactNum,
				TOUR_CONTATC2 	AS 	tourContactNum2,
				TOUR_OTHERS 	AS 	tourOthers,
				REG_YMD 		AS 	tourRegDate
			FROM
				TOUR_INFO
			where
				TOUR_INFO_CD = #{tourInfoCode}

	</select>

	<update id="tourModify" parameterType="destination">
		/* 관광지 수정 */
			UPDATE TOUR_INFO
			SET
				TOUR_NAME 		= #{tourName},
				TOUR_INFO_CD 	= #{tourInfoCode},
				TRIP_SCTGRY_CD	= #{tripSCateCode},
				PRTNR_BPLC_CD	= #{partnerBPlaceCode},
				RGN_SCTGRY_NM	= #{regionSCateName},
				REG_PF_BIZ_ID 	= #{tourAuthorityId},
				TOUR_ADDR 		= #{tourAddr},
				TOUR_DADDR 		= #{tourDaddr},
				TOUR_SITE 		= #{tourSite},
				TOUR_CONTATC1 	= #{tourContactNum},
				TOUR_CONTATC2 	= #{tourContactNum2},
				TOUR_OTHERS 	= #{tourOthers},
				REG_YMD 		= #{tourRegDate},
				MDFCN_YMD		= NOW()
			WHERE
				TOUR_INFO_CD 	= #{tourInfoCode}
	</update>



	<select id="getTourGoodsList" resultType="destination">
		/* 관광지 옵션 조회 */
			SELECT
				ti.TOUR_NAME 			AS tourName,
				tg.TOUR_GDS_CTGRY 		AS tourGoodsCate,
				tgo.TOUR_GDSOPT_LIST 	AS tourGoodsList,
				tgo.TOUR_GDSOPT_TIME 	AS tourGoodsTime,
				tgo.RGN_SCTGRY_NM 		AS regionSCateName,
				tg.REG_PF_BIZ_ID		AS tourgoodsAuthorityId,
				tg.TOUR_GDS_CD 			AS tourGoodsCode,
				tgo.TOUR_GDSOPT_CD 		AS tourGoodsOptionCd,
				tgo.TOUR_GDSOPT_RMRK 	AS tourOptionRemarks,
				tgo.TOUR_GDSOPT_PRC		AS tourGoodsOptPrice,
				tgo.REG_YMD 			AS tourRegDate,
				tgo.MDFCN_YMD 			AS tourFormDate
			FROM
				TOUR_GOODS AS tg
				INNER JOIN
				TOUR_GOODSOPTION AS tgo
				ON
				tg.TOUR_GDS_CD = tgo.TOUR_GDS_CD
				INNER JOIN
				TOUR_INFO AS ti
				ON
				tg.TOUR_INFO_CD = ti.TOUR_INFO_CD;

	</select>

	<select id="getTourGoodsInfoById" resultType="destination">
		/* 관광지 세부사항 수정 */
			SELECT
				ti.TOUR_NAME 			AS tourName,
				tg.TOUR_GDS_CTGRY 		AS tourGoodsCate,
				tgo.TOUR_GDSOPT_LIST 	AS tourGoodsList,
				tgo.TOUR_GDSOPT_TIME 	AS tourGoodsTime,
				tgo.RGN_SCTGRY_NM 		AS regionSCateName,
				tg.REG_PF_BIZ_ID 		AS tourgoodsAuthorityId,
				tg.TOUR_GDS_CD 			AS tourGoodsCode,
				tgo.TOUR_GDSOPT_CD 		AS tourGoodsOptionCd,
				tgo.TOUR_GDSOPT_RMRK 	AS tourOptionRemarks,
				tg.FAVS_TOTAL 			AS tourTotal,
				tgo.REG_YMD 			AS tourRegDate,
				tgo.MDFCN_YMD		 	AS tourFormDate
			FROM
				TOUR_GOODS AS tg
				INNER JOIN
				TOUR_GOODSOPTION AS tgo
				ON
				tg.TOUR_GDS_CD = tgo.TOUR_GDS_CD
				INNER JOIN
				TOUR_INFO AS ti
				ON
				tg.TOUR_INFO_CD = ti.TOUR_INFO_CD
			where
				tgo.TOUR_GDSOPT_CD = #{tourGoodsOptionCd}
	</select>


	<update id="tourGoodsModify" parameterType="destination">
		/* 관광지세부사항 수정 후 */
			UPDATE 
				TOUR_GOODS AS tg,
				TOUR_GOODSOPTION AS tgo,
				TOUR_INFO AS ti
			<set>
				<if test="tourGoodsCate != null and tourGoodsCate != ''">				
					tg.TOUR_GDS_CTGRY 		= #{tourGoodsCate},
				</if>
				<if test="tourGoodsList != null and tourGoodsList != ''">
					tgo.TOUR_GDSOPT_LIST	= #{tourGoodsList},
				</if>
				<if test="tourGoodsTime != null and tourGoodsTime != ''">
					tgo.TOUR_GDSOPT_TIME	= #{tourGoodsTime},
				</if>
				<if test="regionSCateName != null and regionSCateName != ''">
					tgo.RGN_SCTGRY_NM		= #{regionSCateName},
				</if>
				<if test="tourgoodsAuthorityId != null and tourgoodsAuthorityId != ''">
					tg.REG_PF_BIZ_ID		= #{tourgoodsAuthorityId},
				</if>
				<if test="tourGoodsCode != null and tourGoodsCode != ''">
					tg.TOUR_GDS_CD			= #{tourGoodsCode},
				</if>
				<if test="tourOptionRemarks != null and tourOptionRemarks != ''">
					tgo.TOUR_GDSOPT_RMRK	= #{tourOptionRemarks},
				</if>
				<if test="tourTotal != null and tourTotal != ''">
					tg.FAVS_TOTAL			= #{tourTotal},
				</if>
					tgo.MDFCN_YMD			= NOW()
				
			</set>
			WHERE 
				tg.TOUR_GDS_CD = tgo.TOUR_GDS_CD
				AND 
				tg.TOUR_INFO_CD = ti.TOUR_INFO_CD
				AND 
				tgo.TOUR_GDSOPT_CD = #{tourGoodsOptionCd};

	</update>
		
	<select id="addLodgingCheckList" parameterType="String" resultType="boolean">
		/* 중복 숙소 체크 */
			SELECT	
				COUNT(LODGING_NAME)
			FROM
				LODGING_INFO
			WHERE
				LODGING_NAME = #{lodgingName};	
	</select>
	
	<select id="addLodgingGoodsCheckList" parameterType="String" resultType="boolean">
		/* 중복 숙소 세부정보 체크 */
			SELECT
				COUNT(LODGING_MENU_CD)
			FROM
				LODGING_MENU
			WHERE
				LODGING_MENU_CD = #{lodgingMenuCode};
	</select>
	
	<insert id="addLodging" parameterType="destination">
		/*숙소 등록 처리 */
			INSERT INTO 
				LODGING_INFO
				(LODGING_INFO_CD, 
				 REG_PF_BIZ_ID, 
				 TRIP_SCTGRY_CD, 
				 PRTNR_BPLC_CD, 
				 RGN_SCTGRY_NM, 
				 LODGING_NAME, 
				 LODGING_ADDR, 
				 LODGING_DADDR, 
				 LODGING_CONTACT1, 
				 LODGING_CONTACT2, 
				 LODGING_SITE, 
				 REG_YMD)
				VALUES 
				(#{lodgingInfoCode}, 
				 #{lodgingAuthorityId}, 
				 #{tripSCateCode}, 
				 #{partnerBPlaceCode}, 
				 #{regionSCateName}, 
				 #{lodgingName}, 
				 #{lodgingAddr}, 
				 #{lodgingDaddr}, 
				 #{lodgingContactNum}, 
				 #{lodgingContactNum2}, 
				 #{lodgingSite}, 
				 NOW());
	</insert>
	
	<insert id="addLodingGoods" parameterType="destination">
		/* 숙소 상세정보 등록 처리 */
				
			
	
	</insert>

	
	<delete id="removeLodgingGoods" parameterType="String">
		/* 숙소 상세목록 삭제 */
			
			
			DELETE
			FROM
				LODGING_MENU 
			WHERE
				LODGING_MENU_CD = #{lodgingMenuCode};
	</delete>
	
	<delete id="removeLodging" parameterType="String">
		/* 숙소 삭제 */
			DELETE
			FROM
				LODGING_INFO
			WHERE
				LODGING_INFO_CD = #{lodgingInfoCode};
			
	</delete>
	
	<select id="getLodgingInfoList" resultType="destination">
		/* 숙소 정보 */
			SELECT
				LODGING_INFO_CD 	AS 	lodgingInfoCode,
				TRIP_SCTGRY_CD		AS	tripSCateCode,
				PRTNR_BPLC_CD		AS	partnerBPlaceCode,
				RGN_SCTGRY_NM		AS	regionSCateName,
				REG_PF_BIZ_ID 		AS 	lodgingAuthorityId,
				LODGING_NAME 		AS 	lodgingName,
				LODGING_ADDR 		AS 	lodgingAddr,
				LODGING_DADDR 		AS 	lodgingDaddr,
				LODGING_CONTACT1 	AS 	lodgingContactNum,
				LODGING_CONTACT2 	AS 	lodgingContactNum2,
				LODGING_SITE 		AS 	lodgingSite,
				REG_YMD 			AS 	lodgingRegDate,
				MDFCN_YMD 			AS 	lodgingFormDate
			FROM
				LODGING_INFO;
	</select>

	<select id="getLodgingGoodsList" resultType="destination">
		/* 숙소상품 정보 */
			SELECT
				li.LODGING_NAME 			AS lodgingName,
				lm.LODGING_MENU_TYPE 		AS lodgingMenuType,
				li.LODGING_INFO_CD 			AS lodgingInfoCode,
				lm.LODGING_MENU_CD 			AS lodgingMenuCode,
				lm.LODGING_MENU_MINCPCT 	AS lodgingMenuMinPct,
				lm.LODGING_MENU_MAXCPCT 	AS lodgingMenuMaxPct,
				lm.LODGING_MENU_PRC 		AS lodgingMenuPrc,
				lm.LODGING_MENU_ADDPRC 		AS lodgingMenuAddprc,
				lm.LODGING_MENU_SMOKE_YN 	AS lodgingMenuSmokeYn,
				lm.LODGING_MENU_BK_YN 		AS lodgingMenuBkYn,
				li.REG_YMD 					AS lodgingRegDate,
				li.MDFCN_YMD 				AS lodgingFormDate
			FROM
				LODGING_INFO AS li
				INNER JOIN
				LODGING_MENU AS lm
				ON
				li.LODGING_INFO_CD = lm.LODGING_INFO_CD;

	</select>

	<select id="getLodgingInfoById" resultType="destination">
		/* 숙소 수정을 위한 목록가져오기 */	
			SELECT
				LODGING_INFO_CD 	AS lodgingInfoCode,
				REG_PF_BIZ_ID 		AS lodgingAuthorityId,
				LODGING_NAME 		AS lodgingName,
				LODGING_ADDR 		AS lodgingAddr,
				LODGING_DADDR 		AS lodgingDaddr,
				LODGING_CONTACT1 	AS lodgingContactNum,
				LODGING_CONTACT2 	AS lodgingContactNum2,
				LODGING_SITE 		AS lodgingSite,
				REG_YMD 			AS lodgingRegDate,
				MDFCN_YMD 			AS lodgingFormDate
			FROM
				LODGING_INFO
			WHERE
				LODGING_INFO_CD = #{lodgingInfoCode};


	</select>

	<update id="lodgingModify" parameterType="destination">
		/* 숙소 수정 */
			UPDATE LODGING_INFO
			SET
				LODGING_NAME 		= #{lodgingName},
				LODGING_ADDR 		= #{lodgingAddr},
				LODGING_DADDR 		= #{lodgingDaddr},
				LODGING_CONTACT1 	= #{lodgingContactNum},
				LODGING_CONTACT2 	= #{lodgingContactNum2},
				LODGING_SITE 		= #{lodgingSite},
				LODGING_ETC 		= #{lodgingOthers},
				MDFCN_YMD			= NOW()
			WHERE
				LODGING_INFO_CD = #{lodgingInfoCode}

	</update>

	<select id="getLodgingGoodsInfoById" resultType="destination">
		/* 숙소 상세정보 수정 화면 */
			SELECT
				li.LODGING_NAME 			AS lodgingName,
				lm.LODGING_MENU_CD			AS lodgingMenuCode,
				lm.LODGING_MENU_TYPE 		AS lodgingMenuType,
				lm.LODGING_MENU_MINCPCT 	AS lodgingMenuMinPct,
				lm.LODGING_MENU_MAXCPCT 	AS lodgingMenuMaxPct,
				lm.LODGING_MENU_PRC 		AS lodgingMenuPrc,
				lm.LODGING_MENU_ADDPRC 		AS lodgingMenuAddprc,
				lm.LODGING_MENU_SMOKE_YN 	AS lodgingMenuSmokeYn,
				lm.LODGING_MENU_BK_YN 		AS lodgingMenuBkYn,
				li.REG_YMD 					AS lodgingRegDate,
				li.MDFCN_YMD 				AS lodgingFormDate
	
			FROM
				LODGING_INFO AS li
				INNER JOIN
				LODGING_MENU AS lm
				ON
				li.LODGING_INFO_CD = lm.LODGING_INFO_CD
			WHERE
				lm.LODGING_MENU_CD = #{lodgingMenuCode};	
			
	</select>

	<update id="lodgingGoodsModify" parameterType="destination">
		/* 숙소 상세정보 수정 후 업데이트 */
			UPDATE 
				LODGING_INFO AS li,
				LODGING_MENU AS lm
			<set>
				<if test="lodgingName != null and lodgingName != ''">
					li.LODGING_NAME				= #{lodgingName},
				</if>
				<if test="lodgingMenuType != null and lodgingMenuType != ''">
					lm.LODGING_MENU_TYPE		= #{lodgingMenuType},
				</if>
				<if test="lodgingInfoCode != null and lodgingInfoCode != ''">
					li.LODGING_INFO_CD			= #{lodgingInfoCode} ,
				</if>
				<if test="lodgingMenuMinPct != null and lodgingMenuMinPct != ''">
					lm.LODGING_MENU_MINCPCT		= #{lodgingMenuMinPct},
				</if>
				<if test="lodgingMenuMaxPct != null and lodgingMenuMaxPct != ''">
					lm.LODGING_MENU_MAXCPCT 	= #{lodgingMenuMaxPct},
				</if>
				<if test="lodgingMenuPrc != null and lodgingMenuPrc != ''">
					lm.LODGING_MENU_PRC			= #{lodgingMenuPrc},
				</if>
				<if test="lodgingMenuAddprc != null and lodgingMenuAddprc != ''">
					lm.LODGING_MENU_ADDPRC  	= #{lodgingMenuAddprc},
				</if>
				<if test="lodgingMenuSmokeYn != null and lodgingMenuSmokeYn != ''">
					lm.LODGING_MENU_SMOKE_YN	= #{lodgingMenuSmokeYn},
				</if>
				<if test="lodgingMenuBkYn != null and lodgingMenuBkYn != ''">
					lm.LODGING_MENU_BK_YN		= #{lodgingMenuBkYn},
				</if>
					li.MDFCN_YMD 				= NOW()
			</set>
			WHERE
				li.LODGING_INFO_CD = lm.LODGING_INFO_CD
				AND
				lm.LODGING_MENU_CD = #{lodgingMenuCode};

	</update>


	<select id="getRestaurantInfoById" resultType="destination">
		/* 식당 수정 전 정보 */
		
	
			SELECT
				RSTRN_INFO_CD 	AS restaurantInfoCode,
				REG_PF_BIZ_ID 	AS restaurantAuthorityId,
				RSTRN_NAME 		AS restaurantName,
				RSTRN_ADDR 		AS restaurantAddr,
				RSTRN_DADDR	 	AS restaurantDaddr,
				RSTRN_CONTACT 	AS restaurantContactNum,
				RSTRN_SITE 		AS restaurantSite,
				RSTRN_OTHERS	AS restaurantOthers,
				REG_YMD 		AS restaurantRegDate,
				MDFCN_YMD 		AS restaurantFormDate
			FROM
				RESTAURANT_INFO
			WHERE
				RSTRN_INFO_CD = #{restaurantInfoCode};

	</select>

	<update id="restaurantMoidfy" parameterType="destination">
		/* 식당 수정 */
			UPDATE RESTAURANT_INFO
			SET
				RSTRN_NAME		= #{restaurantName},
				RSTRN_ADDR		= #{restaurantAddr},
				RSTRN_DADDR		= #{restaurantDaddr},
				RSTRN_CONTACT	= #{restaurantContactNum},
				RSTRN_SITE		= #{restaurantSite},
				RSTRN_OTHERS	= #{restaurantOthers},
				MDFCN_YMD		= NOW()
			WHERE
				RSTRN_INFO_CD = #{restaurantInfoCode}

	</update>



	<select id="getRestaurantInfoList" resultType="destination">
		/* 식당 정보 목록 */

			SELECT
				RSTRN_INFO_CD 	AS restaurantInfoCode,
				REG_PF_BIZ_ID 	AS restaurantAuthorityId,
				TRIP_SCTGRY_CD 	AS tripSCateCode,
				PRTNR_BPLC_CD 	AS partnerBPlaceCode,
				RSTRN_NAME 		AS restaurantName,
				RSTRN_ADDR 		AS restaurantAddr,
				RSTRN_DADDR 	AS restaurantDaddr,
				RSTRN_CONTACT 	AS restaurantContactNum,
				RSTRN_SITE 		AS restaurantSite,
				RSTRN_OTHERS	AS restaurantOthers,
				REG_YMD 		AS restaurantRegDate,
				MDFCN_YMD 		AS restaurantFormDate
			FROM
				RESTAURANT_INFO;
	</select>
	<select id="getRestaurantMenuList" resultType="destination">
		/* 식당메뉴 정보 */
			SELECT
				rm.RSTRN_INFO_CD			AS restaurantInfoCode,
				ri.RSTRN_NAME 				AS restaurantName,
				rm.RSTRN_MENU_MNG_CD		AS restaurantMenuManageCode,
				rm.RSTRN_MENU 				AS restaurantMenu,	
				rm.RSTRN_MENU_PRICE			AS restaurantMenuPrice,
				rm.REG_PF_BIZ_ID			AS restaurantAuthorityId,
				rm.REG_YMD					AS restaurantRegDate,
				rm.MDFCN_YMD				AS restaurantFormDate
			FROM
				RESTAURANT_INFO AS ri
				INNER JOIN
				RESTAURANT_MENU AS rm
			ON
				ri.RSTRN_INFO_CD = rm.RSTRN_INFO_CD;
	</select>
	<select id="getRestaurantMenuInfoById" resultType="destination">
		/*  */
			SELECT
				rm.RSTRN_INFO_CD			AS restaurantInfoCode,
				ri.RSTRN_NAME 				AS restaurantName,
				rm.RSTRN_MENU_MNG_CD		AS restaurantMenuManageCode,
				rm.RSTRN_MENU 				AS restaurantMenu,	
				rm.RSTRN_MENU_PRICE			AS restaurantMenuPrice,
				rm.REG_PF_BIZ_ID			AS restaurantAuthorityId,
				rm.REG_YMD					AS restaurantRegDate,
				rm.MDFCN_YMD				AS restaurantFormDate
			FROM
				RESTAURANT_INFO AS ri
				INNER JOIN
				RESTAURANT_MENU AS rm
			ON
				ri.RSTRN_INFO_CD = rm.RSTRN_INFO_CD
			WHERE
				rm.RSTRN_MENU_MNG_CD = #{restaurantMenuManageCode};	
	</select>
	<update id="restaurantMenuModify" parameterType="destination">
		/*  */
			UPDATE 
				RESTAURANT_INFO AS ri, 
				RESTAURANT_MENU AS rm
			<set>
				<if test="restaurantName != null and restaurantName != ''">
					ri.RSTRN_NAME		= #{restaurantName},
				</if>
				<if test="restaurantMenu != null and restaurantMenu != ''">
					rm.RSTRN_MENU		= #{restaurantMenu},	
				</if>
				<if test="restaurantMenuPrice != null and restaurantMenuPrice != ''">
					rm.RSTRN_MENU_PRICE = #{restaurantMenuPrice},
				</if>
					
			</set> 
			
			WHERE
				ri.RSTRN_INFO_CD = rm.RSTRN_INFO_CD
			and
				rm.RSTRN_MENU_MNG_CD = #{restaurantMenuManageCode};
	</update>
	
	<delete id="removeRestaurant" parameterType="String">
		/* 음식점 삭제 */
			DELETE 
	        FROM 
	        	RESTAURANT_INFO 
	        WHERE 
	        	RSTRN_INFO_CD = #{restaurantinfoCode};
	</delete>
	
	
	<delete id="removeRestaurantMenu" parameterType="String">
		/* 음식점 삭제 */
			DELETE 
	        FROM 
	        	RESTAURANT_MENU
	        WHERE 
	        	RSTRN_MENU_MNG_CD = #{restaurantMenuManageCode};
	
	</delete>
</mapper>  